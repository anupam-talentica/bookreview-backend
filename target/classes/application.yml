# BookReview Application Configuration
# Default configuration for all environments

server:
  port: 8080
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: bookreview-backend
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # JPA and Database Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
    open-in-view: false
  
  # Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: false
    locations: classpath:db/migration
    
  # Redis Configuration
  data:
    redis:
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC
    
  # Multipart Configuration
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# Management and Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true

# Logging Configuration
logging:
  level:
    com.bookreview: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application Configuration
app:
  name: BookReview Platform
  version: 1.0.0
  description: "AI-powered book review and recommendation platform"
  
  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET:bookreview-jwt-secret-key-change-in-production}
    expiration: ${JWT_EXPIRATION:86400} # 24 hours in seconds
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:2592000} # 30 days in seconds
  
  # CORS Configuration
  cors:
    allowed-origins: 
      - http://localhost:3000
      - https://bookreview.com
    allowed-methods: 
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers: 
      - Authorization
      - Content-Type
      - X-Requested-With
    exposed-headers:
      - X-Total-Count
    allow-credentials: true
    max-age: 3600
  
  # OpenAI Configuration
  openai:
    api-key: ${OPENAI_API_KEY:your-openai-api-key}
    model: ${OPENAI_MODEL:gpt-3.5-turbo}
    max-tokens: 150
    temperature: 0.7
    base-url: https://api.openai.com/v1
  
  # Email Configuration
  mail:
    from: ${MAIL_FROM:noreply@bookreview.com}
    verification-url: ${VERIFICATION_URL:http://localhost:3000/verify-email}
    reset-password-url: ${RESET_PASSWORD_URL:http://localhost:3000/reset-password}
  
  # AWS Configuration
  aws:
    region: ${AWS_REGION:us-east-1}
    s3:
      bucket: ${AWS_S3_BUCKET:bookreview-images}
      cloudfront-url: ${AWS_CLOUDFRONT_URL:https://d1234567890.cloudfront.net}
  
  # Rate Limiting Configuration
  rate-limit:
    enabled: true
    requests-per-minute: 60
    burst-capacity: 100

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  info:
    title: BookReview API
    description: RESTful API for BookReview platform with JWT authentication
    version: 1.0.0
    contact:
      name: BookReview Development Team
      email: dev@bookreview.com
  show-actuator: false
